/*!
* Dynamsoft JavaScript Library
* @product Dynamsoft Code Parser JS Edition
* @website http://www.dynamsoft.com
* @copyright Copyright 2024, Dynamsoft Corporation
* @author Dynamsoft
* @version 2.0.20
* @fileoverview Dynamsoft JavaScript Library for Code Parser
* More info on dcp JS: https://www.dynamsoft.com/code-parser/docs/web/programming/javascript/
*/
!function(){"use strict";let e={};const s=self;async function t(e,s){return await new Promise(((t,r)=>{let a=new XMLHttpRequest;a.open("GET",e,!0),a.responseType=s,a.send(),a.onloadend=async()=>{t(a.response)},a.onerror=()=>{r(new Error("Network Error: "+a.statusText))}}))}s.dcpWorkerVersion="2.0.20";const r=s.checkAndAutoLoadResourceBuffer=async(s,r)=>{s=s.toUpperCase(),e[s]||(e[s]=(async()=>{try{let a,n,c;const o=new TextDecoder;a=await t(r+s+".data","arraybuffer"),o.decode(new Uint8Array(a,0,8)).startsWith("DCPD_DLL")&&await loadSideModule("dedicator",{js:!1,wasm:!0});let i=0;const d=new Uint8Array(a,8,8);for(let e=7;e>=0;--e)i=256*i+d[e];const p=o.decode(new Uint8Array(a,16,i));n=JSON.parse(p),c=16+i;const m=(e=>{const s=n[e];if(!s)throw new Error(`File name ${e} not found.`);return new Uint8Array(a,c+s[0],s[1])})(s+".dcpres"),_=new Uint8Array(await t(r+UTF8ToString(wasmImports.emscripten_bind_DcpWasm_GetMapNameBySpecification_2(setBufferIntoWasm(m,0),m.length)),"arraybuffer"));return ep(),log(UTF8ToString(wasmImports.emscripten_bind_DcpWasm_AppendResourceBuffer_5(es(s+".dcpres"),setBufferIntoWasm(m,0),m.length,setBufferIntoWasm(_,1),_.length))),e[s]=!0,!0}catch(t){throw delete e[s],t}})()),await e[s]};Object.assign(mapController,{dcp_appendResourceBuffer:async(e,s)=>{try{await r(e.specificationName,e.specificationPath)}catch(e){return void handleTaskErr(s,e)}handleTaskRes(s,{success:!0})},dcp_createInstance:async(e,s)=>{try{let e=wasmImports.emscripten_bind_DcpWasm_CreateInstance_0();handleTaskRes(s,{instanceID:e})}catch(e){return void handleTaskErr(s,e)}},dcp_dispose:async(e,s,t)=>{try{wasmImports.emscripten_bind_DcpWasm___destroy___0(t),handleTaskRes(s,{success:!0})}catch(e){handleTaskErr(s,e)}},dcp_initSettings:async(e,s,t)=>{try{await loadSideModule("dedicator",{js:!1,wasm:!0}),ep();let r=UTF8ToString(wasmImports.emscripten_bind_DcpWasm_InitSettings_1(t,es(e.settings)));handleTaskRes(s,{success:!0,response:r})}catch(e){return void handleTaskErr(s,e)}},dcp_resetSettings:async(e,s,t)=>{try{wasmImports.emscripten_bind_DcpWasm_ResetSettings_0(t),handleTaskRes(s,{success:!0})}catch(e){return void handleTaskErr(s,e)}},dcp_parse:async(e,s,t)=>{try{ep();let r=UTF8ToString(wasmImports.emscripten_bind_DcpWasm_Parse_3(t,setBufferIntoWasm(e.source,0),e.source.length,es(e.taskSettingName)));handleTaskRes(s,{success:!0,parseResponse:r})}catch(e){return void handleTaskErr(s,e)}}})}();
